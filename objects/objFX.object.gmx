<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Shader Uniforms

//distortion effect shader
u_resolution_water = shader_get_uniform(sh_underwater, "iResolution");
u_seconds_water = shader_get_uniform(sh_underwater, "iGlobalTime");
u_texture_water = shader_get_sampler_index(sh_underwater, "tex_water");
sec = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop Automated Drawing of Application Surface in PostDraw Event

application_surface_draw_enable(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increase Time

sec += 1 / room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Shaders

shader_set(sh_passThrough);
baseSurf = surface_get_texture(application_surface);
samplerSurf = shader_get_sampler_index(sh_passThrough, "screenTest")
texture_set_stage(samplerSurf, surface_get_texture(application_surface));
draw_rectangle(0,0,room_width,room_height,false);
shader_reset();

//draw wave distortion effect

shader_set(sh_underwater);

shader_set_uniform_f(u_resolution_water,room_width,room_width);

shader_set_uniform_f(u_seconds_water,sec);

texture_set_stage(u_texture_water, surface_get_texture(application_surface)); //feed application surface into shader

draw_sprite_ext(sprCapsuleGlass, 0, objExperiment.x,objExperiment.y, objExperiment.image_xscale, objExperiment.image_yscale,0,c_white,0);

shader_reset();

//redraw sprites
with objCapsule
{
scrDrawSprite(self);
}

//Body
with objDFBody
{
scrDrawSprite(self);
}

//EyesAgain
with objEye1Under
{
scrDrawSprite(self);
}
with objEye2Under
{
scrDrawSprite(self);
}
with objEye3Under
{
scrDrawSprite(self);
}

//Florence
with objFlorBattle
{
scrDrawSprite(self);
}

//Tentacles
with objTent1
{
scrDrawSprite(self);
}

with objTent2
{
scrDrawSprite(self);
}

with objTent3
{
scrDrawSprite(self);
}
with objTent4
{
scrDrawSprite(self);
}
with objTent5
{
scrDrawSprite(self);
}

//Head and above
scrDrawSprite(objDFHead);

with objEye1
{
    scrDrawSprite(self);
}

with objEye2
{
scrDrawSprite(self);
}
with objEye3
{
scrDrawSprite(self);
}
with objEyes
{
scrDrawSprite(self);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
